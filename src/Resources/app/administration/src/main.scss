@import "states";
@import "variables";

@mixin colorOverwrites($bg, $text, $border) {
    $sel: '*';
    @for $i from 1 through length($background-excludes) {
        $sel: selector-nest($sel, '&:not(#{nth($background-excludes, $i)})');

        @if nth($background-excludes, length($background-excludes)) == nth($background-excludes, $i) {
            #{$sel} {
                background-color: $bg!important;
                color: $text!important;
            }
        }
    }

    $sel: '*';
    @for $i from 1 through length($border-excludes) {
        $sel: selector-nest($sel, '&:not(#{nth($border-excludes, $i)})');

        @if nth($border-excludes, length($border-excludes)) == nth($border-excludes, $i) {
            #{$sel} {
                border-color: $border!important;
            }
        }
    }
}

body.is-dark-mode {
    .sw-modal,
    .sw-popover__wrapper,
    .sw-desktop__content {
        @include colorOverwrites($dark-bg-color, $dark-text-color, $dark-border-color);
    }

    .sw-data-grid {
        .sw-data-grid__body {
            .sw-data-grid__row:nth-child(2n) {
                @include colorOverwrites($dark-bg-alternate, $dark-text-color, $dark-border-color);
            }
        }
        .sw-data-grid__cell--actions {
            box-shadow: none;
        }
    }

    .sw-popover__wrapper {
        .sw-data-grid__settings-column-item-controls {
            .sw-button {
                background: transparent;
            }
        }
    }

    .sw-colorpicker__colorpicker:before,
    .sw-context-menu .sw-context-menu__content:before,
    .sw-text-editor-toolbar-button .sw-text-editor-toolbar-button__children:before {
        background-color: $dark-bg-color!important;
        border-color: $dark-border-color!important;
    }
}

.dne-dark-mode {
    min-width: 65px;

    .sw-icon {
        float: left;
    }
    .sw-field--switch {
        float: left;
        margin: -10px 10px 0 5px;
    }
}
